{"version":3,"file":"component---src-pages-index-tsx-ca4add4da52a780102aa.js","mappings":"oOAMWA,EAAa,sCCqExB,EA3CyD,SACvDC,GAEA,IAAQC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,QAASC,EAA6BH,EAA7BG,YAAaC,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,MAEtCC,EAAO,IAAOF,EAEpB,OACE,2BAASG,UDvCS,qCCwChB,8BACE,sBAAIA,UDxCW,sCCyCb,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,GAAUD,KAGxB,uBAAKE,UD3Cc,wCC4CjB,yBAAIL,IAEN,0BAAQK,UD7CU,uCC8ChB,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAASC,UD7CD,0CC6ClB,aAGA,2BACGN,EACC,gCACE,gBAAC,IAAD,CAAiBS,KAAMC,EAAAA,IAAQJ,UAAWR,IAC1C,4BAAOE,EAAOW,WAGhB,gCACE,gBAAC,IAAD,CAAiBF,KAAMG,EAAAA,IAAcN,UAAWR,IAChD,2CAIN,uBAAKQ,UD3DY,wCC4Df,gBAAC,IAAD,CAAiBA,UD3DD,wCC2D0BG,KAAMI,EAAAA,MAC/CX,MC5BLY,EAEiD,SAACC,GAAU,IAAD,EAC/D,IAAKA,EAAKC,YAAYC,KACpB,MAAM,IAAIC,MAAJ,wCAAkDH,EAAKZ,MAW/D,MATuE,CACrEH,OAAQe,EAAKC,YAAYhB,OACzBC,QAASc,EAAKd,QACdkB,GAAIJ,EAAKI,GACTjB,YAAaa,EAAKC,YAAYC,KAC9Bd,KAAMY,EAAKZ,KACXC,MAAK,UAAEW,EAAKK,SAAS,UAAhB,aAAE,EAAkBC,QAsB7B,EAhB0D,SACxDtB,GAEA,IAEMuB,EAFWvB,EAATwB,KAEoBC,OAAOC,MAAMC,IAAIZ,GAE7C,OACE,gBAAC,IAAD,CAAQa,UAAU,OAAOC,eAAa,GACnCN,EAAeI,KAAI,SAACG,GAAD,OAClB,gBAAC,EAAD,eAAUC,IAAKD,EAAcV,IAAQU","sources":["webpack://genoma-games-website/./src/components/postItem.module.css","webpack://genoma-games-website/./src/components/postItem.tsx","webpack://genoma-games-website/./src/pages/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var postItem = \"postItem-module--post-item--hXIsk\";\nexport var postTitle = \"postItem-module--post-title--mzMZ6\";\nexport var postExcerpt = \"postItem-module--post-excerpt--DTe64\";\nexport var postFooter = \"postItem-module--post-footer--+6VfP\";\nexport var readMoreLink = \"postItem-module--read-more-link--sn4ZB\";\nexport var authorIcon = \"postItem-module--author-icon--mxy2f\";\nexport var publishDate = \"postItem-module--publish-date--aKbCm\";\nexport var calendarIcon = \"postItem-module--calendar-icon--XEBLE\";","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faUser,\n  faUserSecret,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  authorIcon,\n  calendarIcon,\n  postExcerpt,\n  postFooter,\n  postItem,\n  postTitle,\n  publishDate,\n  readMoreLink,\n} from \"./postItem.module.css\";\n\ninterface PostItemProps {\n  author?: {\n    nickname: string;\n    url: string;\n  };\n  excerpt: string;\n  id: string;\n  publishedAt: string;\n  slug: string;\n  title: string;\n}\n\nconst PostItem: React.FunctionComponent<PostItemProps> = (\n  props: PostItemProps\n) => {\n  const { author, excerpt, publishedAt, slug, title } = props;\n\n  const postUrl = `/${slug}`;\n\n  return (\n    <article className={postItem}>\n      <header>\n        <h2 className={postTitle}>\n          <Link to={postUrl}>{title}</Link>\n        </h2>\n      </header>\n      <div className={postExcerpt}>\n        <p>{excerpt}</p>\n      </div>\n      <footer className={postFooter}>\n        <Link to={postUrl} className={readMoreLink}>\n          Read more\n        </Link>\n        <div>\n          {author ? (\n            <>\n              <FontAwesomeIcon icon={faUser} className={authorIcon} />\n              <span>{author.nickname}</span>\n            </>\n          ) : (\n            <>\n              <FontAwesomeIcon icon={faUserSecret} className={authorIcon} />\n              <span>Anonymous</span>\n            </>\n          )}\n        </div>\n        <div className={publishDate}>\n          <FontAwesomeIcon className={calendarIcon} icon={faCalendar} />\n          {publishedAt}\n        </div>\n      </footer>\n    </article>\n  );\n};\n\nexport default PostItem;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport { MdxNode } from \"../types/MdxNode\";\nimport PostItem from \"../components/postItem\";\n\ninterface HomePageData {\n  allMdx: {\n    nodes: MdxNode[];\n  };\n}\n\ntype HomePageProps = PageProps<HomePageData>;\n\nexport const query = graphql`\n  query HomePage {\n    allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n      nodes {\n        excerpt\n        frontmatter {\n          author {\n            nickname\n            url\n          }\n          date(formatString: \"YYYY-MM-DD\")\n          excerpt\n          title\n        }\n        headings {\n          depth\n          value\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n\nconst transformMdxNodeToPostItemProps: (\n  node: MdxNode\n) => React.ComponentPropsWithoutRef<typeof PostItem> = (node) => {\n  if (!node.frontmatter.date)\n    throw new Error(`Required frontmatter 'date' field in ${node.slug}`);\n\n  const postItemProps: React.ComponentPropsWithoutRef<typeof PostItem> = {\n    author: node.frontmatter.author,\n    excerpt: node.excerpt,\n    id: node.id,\n    publishedAt: node.frontmatter.date,\n    slug: node.slug,\n    title: node.headings[0]?.value,\n  };\n\n  return postItemProps;\n};\n\nconst IndexPage: React.FunctionComponent<HomePageProps> = (\n  props: HomePageProps\n) => {\n  const { data } = props;\n\n  const postItemsProps = data.allMdx.nodes.map(transformMdxNodeToPostItemProps);\n\n  return (\n    <Layout pageTitle=\"Home\" isTitleHidden>\n      {postItemsProps.map((postItemProps) => (\n        <PostItem key={postItemProps.id} {...postItemProps} />\n      ))}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["authorIcon","props","author","excerpt","publishedAt","slug","title","postUrl","className","Link","to","icon","faUser","nickname","faUserSecret","faCalendar","transformMdxNodeToPostItemProps","node","frontmatter","date","Error","id","headings","value","postItemsProps","data","allMdx","nodes","map","pageTitle","isTitleHidden","postItemProps","key"],"sourceRoot":""}